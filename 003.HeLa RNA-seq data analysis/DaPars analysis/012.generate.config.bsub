#!/bin/bash

#BSUB -n 1  # minmal numbers of processors required for a parallel job
#BSUB -R rusage[mem=1000] # ask for memory 5G
#BSUB -W 2:00 #limit the job to be finished in 12 hours
#BSUB -J "star[1]%50"
#BSUB -q short   # which queue we want to run in
#BSUB -o logs/out.%J.%I.txt # log
#BSUB -e logs/err.%J.%I.txt # error
#BSUB -R "span[hosts=1]" # All hosts on the same chassis"
##BSUB -w "done(1040379)"

i=$(($LSB_JOBINDEX- 1))

set -u
set -e 
set -o  pipefail

module load perl/5.18.1

# bedgraph files
bedgraph_dir=results/010.bedtools.bedgraph.out/4.splitted.HeLa.PE.RNA-seq
bedgraph=(${bedgraph_dir}/*.srt.mrg.bedgraph)

bedgraph_1=(${bedgraph[@]:0:2})
printf -v joined '%s,' "${bedgraph_1[@]}"
bedgraph_1=`echo "${joined%,}"`
bedgraph_2=(${bedgraph[@]:2:2})
printf -v joined '%s,' "${bedgraph_2[@]}"
bedgraph_2=`echo "${joined%,}"`
name=(4.splitted.HeLa.PE.RNA-seq.Github.dapars)

gene_model_bed=human_gencode_v34/002.Hela.expressed/00.new.filter.gtf/00.HeLa.extracted.3UTR.refilt.bed
gene_symbol_map=human_gencode_v34/002.Hela.expressed/00.new.filter.gtf/001.HeLa.expressed.tx.gene.refilt.map
out_config=human_gencode_v34/002.Hela.expressed/00.new.filter.gtf
out=results/015.Dapars.out/4.HeLa.PE.RNA-seq/

mkdir -p ${out_config}
mkdir -p $out

echo "whole_gene_bed_file=${gene_model_bed}"  >> ${out_config}/${name[$i]}.config 
echo "gene_symbol_map_file=${gene_symbol_map}" >> ${out_config}/${name[$i]}.config 
echo "#A comma-separated list of BedGraph files of samples from condition 1"  >> ${out_config}/${name[$i]}.config 
echo "Group1_Tophat_aligned_Wig=${bedgraph_1[$i]}"  >> ${out_config}/${name[$i]}.config
echo "#A comma-separated list of BedGraph files of samples from condition 2"  >> ${out_config}/${name[$i]}.config
echo "Group2_Tophat_aligned_Wig=${bedgraph_2[$i]}"  >> ${out_config}/${name[$i]}.config
echo "Output_directory=${out}"  >> ${out_config}/${name[$i]}.config
echo "Output_result_file=${name[$i]}.DaPars.out"  >> ${out_config}/${name[$i]}.config
echo "#At least how many samples passing the coverage threshold in two conditions" >> ${out_config}/${name[$i]}.config
echo -e "Num_least_in_group1=1\nNum_least_in_group2=1\nCoverage_cutoff=20" >> ${out_config}/${name[$i]}.config
echo "#Cutoff for FDR of P-values from Fisher exact test." >> ${out_config}/${name[$i]}.config
echo -e "FDR_cutoff=0.05\nPDUI_cutoff=0.2\nFold_change_cutoff=0.59\nNum_Threads=8\nNon_uniform=Yes" >> ${out_config}/${name[$i]}.config

