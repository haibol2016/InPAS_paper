#!/bin/bash

#BSUB -n 10  # minmal numbers of processors required for a parallel job
#BSUB -R rusage[mem=8000] # ask for memory 5G
#BSUB -R select[rh=8]
#BSUB -W 4:00 #limit the job to be finished in 12 hours
#BSUB -J "star[18]%50"
#BSUB -q short    # which queue we want to run in
#BSUB -o logs/out.%J.%I.txt # log
#BSUB -e logs/err.%J.%I.txt # error
#BSUB -R "span[hosts=1]" # All hosts on the same chassis"

i=$(($LSB_JOBINDEX- 1))
mkdir -p logs

set -e 
set -u
set -o pipefail

TxDb=(results/080.polyester.simulation/polyester.sim.long/008.polyester.sim.long.TxDb.sqlite  results/080.polyester.simulation/polyester.sim.short.single/008.polyester.sim.short.single.TxDb.sqlite)
TxDb_sqlite=()

for k in {0..1}
do
   for j in {0..15}
   do
      TxDb_sqlite+=(${TxDb[$k]})
   done
done

bedgraph=(/home/hl84w/marcus_ruscetti/haibo/results/010.bedtools.bedgraph.out/*/*.bedgraph)
bedgraph+=(${bedgraph[@]})

tag=(`ls /home/hl84w/marcus_ruscetti/haibo/results/010.bedtools.bedgraph.out/*/*.bedgraph| perl -p -e 's{.+/(sample_\d+).unique.map.bedgraph}{$1}'`)
tag+=(${tag[@]})

sqlite_dbs=(results/081.polyester.simulation/*/01.polyester.*/InPAS_hugeData.sqlite)
sqlite_db=()
outdirs=(`ls -d  results/081.polyester.simulation/*/01.polyester.*`)
outdir=()

for k in {0..15}
do
  for l in {0..1}
  do
     sqlite_db+=(${sqlite_dbs[$k]})
     outdir+=(${outdirs[$k]})
  done
done

echo ${bedgraph[$i]}
echo ${tag[$i]}
echo ${outdir[$i]}
echo ${sqlite_db[$i]}
echo ${TxDb_sqlite[$i]}

time singularity exec ~/bioc_sandbox Rscript --vanilla scripts_polyester/017.get_ssRleCov.R \
        --bedgraph="${bedgraph[$i]}"  \
        --tag=${tag[$i]} \
        --outdir=${outdir[$i]}  \
        --sqlite_db=${sqlite_db[$i]} \
        --TxDb=${TxDb_sqlite[$i]}
